{"name":"Jspm-transpilers-sample","tagline":"This sample demonstrates usage & advantages of JSPM transpilers","body":"Use JSPM plugins for transpilition, why & how?\r\n\r\n# Why?\r\n\r\n'Typescript' is a super set of 'JavaScript'. It has several advantages than 'JavaScript', which are described on the web.\r\n\r\n'Less' is a super set of 'CSS'. It has several advantages than 'CSS' which are described on the web.\r\n\r\n'X' is a super set of 'Y'. It has several advantages than 'Y' which are described on the web.\r\n\r\nAlmost all of these facilities are transpiling something to some other thing.\r\n\r\nDevelopment using these facilities is recommended, but using them with jspm adds several extra benefits:\r\n\r\n1-\tYou don't have to provide IDE & task based configuration for every IDE and task runner you use in your team. VSCode has its own tsconfig.json for Typescript, Web storm has its own, Visual Studio etc.\r\n\r\n2-\tIf you’ve some ECMA 6 & 7 based JavaScript files, you’ve to configure something like babel as a transpiler, while you can handle them using Typescript as a transpiler with JSPM.\r\n\r\n3- This is a unique approach for all your transpilition needs. It can also gives you a production ready results too.\r\n\r\n4- Using JSPM, you've a modern ECMA based standard module loader, which is compatible with previews module loaders like require js too. \r\n\r\nNote that this won't remove Typescript type safety error messages from your project, as far as I tested on VS Code, Visual Studio and Web Storms.\r\n\r\n# How?\r\n\r\nI’m going to use JSPM typescript plugin as an example, thanks to [frankwallis’s Git Hub project.](https://github.com/frankwallis/plugin-typescript)\r\n\r\nSo, let’s start!\r\n\r\n1.\tRun “npm install jspm -g” to install JSPM CLI globally.\r\n2.\tRun “npm install jspm --save” to install JSPM locally.\r\n3.\tRun “jspm init” Accept all default values, and choose typescript as a transpiler.\r\n4.\tRun “jspm install ts” to add JSPM Typescript plugin.\r\n5.\tCreate a src folder and create index.ts into that. Then write these configs in your config.js file:\r\n\r\n```json\r\ntypescriptOptions: {\r\n    \"noImplicitAny\": false,\r\n    \"typeCheck\": true,\r\n    \"experimentalDecorators\": true,\r\n    \"module\": \"system\",\r\n    \"emitDecoratorMetadata\": true,\r\n    \"experimentalAsyncFunctions\": true,\r\n    \"taget\": \"ES5\",\r\n    \"sourceMap\": true\r\n  },\r\n  packages: {\r\n    \"src\": { /* src folder */\r\n      \"main\": \"index\", /* index.ts file inside src folder */\r\n      \"defaultExtension\": \"ts\", /* .ts for Typescript files */\r\n      \"meta\": {\r\n        \"*.ts\": {\r\n          \"loader\": \"ts\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n```\r\n\r\n6.\tAdd an index.html, and then write these scripts in that:\r\n```javascript\r\n\t<script src='/jspm_packages/system.src.js'></script>\r\n\t<script src='config.js'></script>\r\n\t<script>\r\n\t\tSystem.import('src' /* src folder */);\r\n\t</script>\r\n```\r\n7.\tRun your app!\r\n\r\nTo transpile ECMA 6 & 7 based JavaScript files:\r\n\r\n1. Create a new folder, for example 'ecmaSrc'\r\n\r\n2. Create index.js in ecmaSrc folder\r\n\r\n3. Add following package into config.js:\r\n\r\n```json\r\n\r\n    \"ecmaSrc\": { /* ecmaSrc folder */\r\n      \"main\": \"index\", /* index.js file inside ecmaSrc folder */\r\n      \"defaultExtension\": \"js\", /* .js for JavaScript files */\r\n      \"meta\": {\r\n        \"*.js\": {\r\n          \"loader\": \"ts\"\r\n        }\r\n      }\r\n    }\r\n\r\n```\r\n\r\n**Production:**\r\n\r\nRun \"jspm bundle-sfx src production.js\"\r\n\r\nThen use 'production.js' file in index.html, instead of all those previews files.\r\n\r\nIt has no dependency to any library, transpiler etc. and it is ECMA 5 based JavaScript file!\r\n\r\nYou don't have to deploy your typescript file into production too, and using generated source maps, there is a debug option available to you, so you can debug your original Typescript codes using chrome dev tools etc.\r\n\r\n[There is a dedicated blog post about this repository, so you can write your comments there](http://fermium.co/post/75722936-4017-4f8a-9cbe-957079f35950/Tell-us-about-our-new-repository-“jspm-transpilers-sample”)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}